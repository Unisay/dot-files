;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Thu Feb 15 09:36:03 2018
;; Desktop file format version 208
;; Emacs version 25.3.2

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23173 18035 455779 267000) (desktop . "208") "ylazaryev@ylazaryev" nil nil ((((font-backend xft x) (font . "-CYEL-Iosevka-normal-normal-normal-*-17-*-*-*-d-0-iso10646-1") (font-parameter) (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#eeeeec") (background-color . "#2e3436") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (fullscreen . maximized) (display-type . color) (background-mode . dark) (cursor-color . "#fce94f") (sticky) (environment) (frameset--id . "2668-F276-7CF0-EDD8") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (visibility . t) (sidebar-window-origin . "Unprintable entity") (sidebar-mu4e-force) (sidebar-buffer-name . " *SIDEBAR-104857783*") (sidebar-buffers-force) (sidebar-mode-to-use . sidebar-buffers-mode) (sidebar-load-content-function . sidebar-content-buffers) (sidebar-make-header-function . sidebar-buffers-make-header) (sidebar-make-modeline-left-function . sidebar-buffers-make-modeline-left) (sidebar-make-modeline-right-function . sidebar-buffers-make-modeline-right) (sidebar-item-builder-function . sidebar-buffers-item-builder) (sidebar-restore-function) (sidebar-print-item . sidebar-print-buffers) (sidebar-line-to-start . 4) (sidebar-root-project . "/home/ylazaryev/") (sidebar-history "/home/ylazaryev/") (sidebar-current-path . "/home/ylazaryev/") (sidebar-window-start) (sidebar-default-width . 40) (sidebar-overlay . "Unprintable entity") (sidebar-save-line) (sidebar-git-branches) (sidebar-git-dir) (sidebar-git-hashtable) (sidebar-line-on-refresh) (sidebar-opened) (sidebar-suffix-header . "/") (sidebar-buffers-return-to-files) (sidebar-save-line-files . 1) (sidebar-save-default-width . 40) (sidebar-save-root-project . "/home/ylazaryev/") (sidebar-save-cwd . "/home/ylazaryev/") (sidebar-save-history "/home/ylazaryev/") (sidebar-save-current-path . "/home/ylazaryev/") (sidebar-saved-state-files . t) (sidebar-sidebar-repet-buffers-list-update . t) (sidebar-buffers-pre-line . 4) (sidebar-buffers-hide) (height . 52) (width . 206) (left . 49) (top . 24)) ((min-height . 4) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 80) (min-pixel-width . 180) (min-pixel-height-ignore . 80) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 20) (min-pixel-width-safe . 36)) hc (pixel-width . 1871) (pixel-height . 1036) (total-width . 208) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 360) (pixel-height . 1036) (total-width . 40) (total-height . 51) (normal-height . 1.0) (normal-width . 0.192143238909674) (buffer " *SIDEBAR-104857783*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated . t) (point . 14) (start . 1))) (leaf (last . t) (pixel-width . 1511) (pixel-height . 1036) (total-width . 168) (total-height . 51) (normal-height . 1.0) (normal-width . 0.807856761090326) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 145) (start . 1)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d" "~/.emacs"))

;; Buffer section -- buffers listed in same order as in buffer list:
